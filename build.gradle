buildscript {
    ext {
        springBootVersion = '2.1.0.M3'
    }
    repositories {
        maven {
            url 'http://localhost:8083/artifactory/gradle-dev'
            credentials {
                username = "${artifactoryUser}"
                password = "${artifactoryPass}"
            }
        }
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


allprojects {
    apply plugin: "com.jfrog.artifactory"
}


group = 'io.spring'
version = '0.1'
sourceCompatibility = 10

artifactory {
    contextUrl = "${artifactoryContextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'ext-snapshot-local'
            username = "${artifactoryUser}"
            password = "${artifactoryPass}"
            maven = true

        }
    }
    resolve {
        repository {
            repoKey = 'gradle-dev'
            username = "${artifactoryUser}"
            password = "${artifactoryPass}"
            maven = true

        }
    }
}

repositories {
    maven {
        url 'http://localhost:8083/artifactory/gradle-dev'
        credentials {
            username = "${artifactoryUser}"
            password = "${artifactoryPass}"
        }
    }
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}


ext {
    springBootAdminVersion = '2.1.0-SNAPSHOT'
    springCloudVersion = 'Greenwich.BUILD-SNAPSHOT'
}



dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('de.codecentric:spring-boot-admin-starter-client')
    compile('de.codecentric:spring-boot-admin-starter-server')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-turbine')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
